server:
  port: 8080

---
spring:
  profiles: test

rest-template:
  request-config:
    connection-request-timeout: 120000  # timeout when requesting a connection from the connection manager
    connect-timeout: 120000             # timeout until a connection is established
    socket-timeout: 120000              # timeout for waiting for data

  pooling-http-client-connection-manager:
    max-total: 20 # Max number of connection to pool

tenant-routing-service:
  url: "http://localhost:8081"

logging:
  level:
    com.rackspacecloud: debug

security:
  whitelistedIpRange: "127.0.0.1/32"
  whitelistedRoles: ["ROLE_COMPUTE_DEFAULT","COMPUTE_DEFAULT"]

---
spring:
  profiles: development
  http:
    log-request-details=true

org:
  springframework:
    web:
      servlet:
        mvc:
          method:
            annotation:
              RequestMappingHandlerMapping=TRACE:

rest-template:
  request-config:
    connection-request-timeout: 120000  # timeout when requesting a connection from the connection manager
    connect-timeout: 120000             # timeout until a connection is established
    socket-timeout: 120000              # timeout for waiting for data

  pooling-http-client-connection-manager:
    max-total: 20 # Max number of connection to pool

tenant-routing-service:
  url: "http://localhost:8081"

logging:
  level:
    com.rackspacecloud: DEBUG
    org:
      springframework:
        web:
          filter:
            CommonsRequestLoggingFilter: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "health,jolokia,metrics"
  metrics:
    export:
      influx:
        db: ceres
        uri: http://localhost:8086
        auto-create-db: true

security:
  whitelistedIpRange: "192.168.0.0/16"
  whitelistedRoles: ["ROLE_COMPUTE_DEFAULT","COMPUTE_DEFAULT"]
---
spring:
  profiles: production

server:
  port: 8080

rest-template:
  request-config:
    # timeout when requesting a connection from the connection manager
    connection-request-timeout: ${REST_TEMPLATE_CONNECTION_REQUEST_TIMEOUT}

    # timeout until a connection is established
    connect-timeout: ${REST_TEMPLATE_CONNECT_TIMEOUT}

    # timeout for waiting for data
    socket-timeout: ${REST_TEMPLATE_SOCKET_TIMEOUT}

  pooling-http-client-connection-manager:
    max-total: ${REST_TEMPLATE_CONNECTION_POOLING_MAX} # Max number of connection to pool

tenant-routing-service:
  url: ${TENANT_ROUTING_SERVICE_URL}

logging:
  level:
    com.rackspacecloud: info

management:
  endpoints:
    web:
      exposure:
        include: "health,jolokia,metrics"
  metrics:
    tags:
      stack: "prod"
      service: "query-service"
    export:
      influx:
        db: ceres
        uri: ${INFLUXDB_METRICS_URL}
        auto-create-db: true
      stackdriver:
        project-id: ceres-dev-222017

security:
  whitelistedIpRange: "10.40.0.0/14"
  whitelistedRoles: ["ROLE_COMPUTE_DEFAULT","COMPUTE_DEFAULT"]
